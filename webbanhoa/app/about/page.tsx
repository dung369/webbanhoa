"use client";

import React, { useState } from "react";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  Heart,
  ShoppingCart,
  Star,
  Users,
  Award,
  Truck,
  Phone,
  MapPin,
  Mail,
  Sparkles,
  Target,
  Lightbulb,
  Shield,
} from "lucide-react";
import CartButton from "@/components/cart-button";
import AnimatedHeader from "@/components/animated-header";
import PageTransition from "@/components/page-transition";
import AdvancedAnimation from "@/components/advanced-animation";
import InteractiveEffect from "@/components/interactive-effect";
import ParticleBackground from "@/components/particle-background";
import SiteFooter from "@/components/site-footer";

export default function AboutPage() {
  const [activeTab, setActiveTab] = useState("story");

  const teamMembers = [
    {
      name: "Tr·∫ßn ƒê·∫°i D≈©ng",
      role: "Nh√≥m tr∆∞·ªüng",
      image: "/images/Hoa H·ªìng ƒê·ªè Ecuador.jpg",
      description: "L√£nh ƒë·∫°o ƒë·ªôi ng≈© v·ªõi t·∫ßm nh√¨n chi·∫øn l∆∞·ª£c v√† kinh nghi·ªám qu·∫£n l√Ω",
      specialty: "Qu·∫£n l√Ω & Chi·∫øn l∆∞·ª£c",
      experience: "10+ nƒÉm",
    },
    {
      name: "V√µ Ho√†ng Duy Nam",
      role: "Th√†nh vi√™n",
      image: "/images/Hoa Tulip H√† Lan.jpg",
      description: "Chuy√™n gia v·ªÅ thi·∫øt k·∫ø v√† c·∫Øm hoa ngh·ªá thu·∫≠t",
      specialty: "Thi·∫øt k·∫ø & Ngh·ªá thu·∫≠t",
      experience: "8+ nƒÉm",
    },
    {
      name: "Nguy·ªÖn Ng·ªçc B·∫£o",
      role: "Th√†nh vi√™n",
      image: "/images/Hoa C·∫©m T√∫ C·∫ßu.jpg",
      description: "Chuy√™n vi√™n ph√°t tri·ªÉn s·∫£n ph·∫©m v√† marketing",
      specialty: "Marketing & S·∫£n ph·∫©m",
      experience: "6+ nƒÉm",
    },
    {
      name: "Nguy·ªÖn Hu·ª≥nh ƒê·ª©c Duy",
      role: "Th√†nh vi√™n",
      image: "/images/Hoa Lan H·ªì ƒêi·ªáp.jpg",
      description: "Chuy√™n gia v·ªÅ logistics v√† qu·∫£n l√Ω kho h√†ng",
      specialty: "Logistics & V·∫≠n h√†nh",
      experience: "7+ nƒÉm",
    },
    {
      name: "V√µ Nh·∫≠t Tri·ªÅu",
      role: "Th√†nh vi√™n",
      image: "/images/Hoa Lavender.jpg",
      description: "Chuy√™n vi√™n chƒÉm s√≥c kh√°ch h√†ng v√† d·ªãch v·ª•",
      specialty: "ChƒÉm s√≥c kh√°ch h√†ng",
      experience: "5+ nƒÉm",
    },
  ];

  const achievements = [
    { icon: Users, number: "10,000+", label: "Kh√°ch h√†ng h√†i l√≤ng", color: "from-rose-500 to-pink-500" },
    { icon: Award, number: "50+", label: "Gi·∫£i th∆∞·ªüng", color: "from-yellow-500 to-orange-500" },
    { icon: Truck, number: "99%", label: "Giao h√†ng ƒë√∫ng h·∫πn", color: "from-green-500 to-emerald-500" },
    { icon: Star, number: "4.9/5", label: "ƒê√°nh gi√° trung b√¨nh", color: "from-blue-500 to-purple-500" },
  ];

  const values = [
    {
      icon: Shield,
      title: "Ch·∫•t L∆∞·ª£ng",
      description: "Ch·ªâ ch·ªçn l·ªçc nh·ªØng b√¥ng hoa t∆∞∆°i nh·∫•t, ƒë·∫πp nh·∫•t t·ª´ c√°c v∆∞·ªùn hoa uy t√≠n.",
      color: "from-rose-500 to-pink-500"
    },
    {
      icon: Heart,
      title: "T·∫≠n T√¢m",
      description: "Ph·ª•c v·ª• kh√°ch h√†ng v·ªõi t·∫•t c·∫£ s·ª± ch√¢n th√†nh v√† nhi·ªát huy·∫øt.",
      color: "from-red-500 to-rose-500"
    },
    {
      icon: Lightbulb,
      title: "S√°ng T·∫°o",
      description: "Kh√¥ng ng·ª´ng ƒë·ªïi m·ªõi trong thi·∫øt k·∫ø v√† c√°ch th·ª©c ph·ª•c v·ª•.",
      color: "from-yellow-500 to-amber-500"
    },
    {
      icon: Target,
      title: "Uy T√≠n",
      description: "Lu√¥n gi·ªØ l·ªùi h·ª©a v√† cam k·∫øt v·ªõi kh√°ch h√†ng.",
      color: "from-blue-500 to-cyan-500"
    },
  ];

  const milestones = [
    { year: "2010", event: "Th√†nh l·∫≠p c·ª≠a h√†ng ƒë·∫ßu ti√™n t·∫°i ƒê√† L·∫°t", icon: "üå±" },
    { year: "2015", event: "M·ªü r·ªông ra TP.HCM v√† H√† N·ªôi", icon: "üåø" },
    { year: "2018", event: "Ra m·∫Øt d·ªãch v·ª• giao h√†ng to√†n qu·ªëc", icon: "üöö" },
    { year: "2020", event: "Ph√°t tri·ªÉn platform online hi·ªán ƒë·∫°i", icon: "üíª" },
    { year: "2023", event: "ƒê·∫°t 10,000+ kh√°ch h√†ng tin t∆∞·ªüng", icon: "üéâ" },
  ];

  return (
    <PageTransition>
      <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-orange-50 relative overflow-hidden">
        <ParticleBackground />
        <AnimatedHeader />

        {/* Hero Section */}
        <section className="py-20 relative z-10">
          <div className="container mx-auto px-4">
            <AdvancedAnimation animation="slideUp" delay={0.2}>
              <div className="text-center mb-16">
                <InteractiveEffect effect="sparkle">
                  <Badge className="bg-gradient-to-r from-rose-100 to-pink-100 text-rose-700 hover:from-rose-200 hover:to-pink-200 mb-4 transform hover:scale-110 transition-all duration-300">
                    <Sparkles className="w-4 h-4 mr-2" />
                    V·ªÅ ch√∫ng t√¥i
                  </Badge>
                </InteractiveEffect>
                
                <h1 className="text-6xl font-bold text-rose-900 mb-6">
                  C√¢u Chuy·ªán C·ªßa
                  <AdvancedAnimation animation="glowPulse" repeat={true}>
                    <span className="block bg-gradient-to-r from-rose-500 to-pink-500 bg-clip-text text-transparent">
                      Hoa T∆∞∆°i Vi·ªát
                    </span>
                  </AdvancedAnimation>
                </h1>
                
                <AdvancedAnimation animation="slideUp" delay={1.5}>
                  <p className="text-xl text-rose-700 max-w-3xl mx-auto leading-relaxed">
                    T·ª´ m·ªôt c·ª≠a h√†ng nh·ªè ƒë·∫øn th∆∞∆°ng hi·ªáu hoa t∆∞∆°i h√†ng ƒë·∫ßu Vi·ªát Nam, ch√∫ng t√¥i lu√¥n cam k·∫øt mang ƒë·∫øn nh·ªØng b√¥ng hoa ƒë·∫πp nh·∫•t cho kh√°ch h√†ng.
                  </p>
                </AdvancedAnimation>
              </div>
            </AdvancedAnimation>

            {/* Achievements */}
            <div className="grid md:grid-cols-4 gap-8 mb-20">
              {achievements.map((achievement, index) => (
                <AdvancedAnimation
                  key={index}
                  animation={
                    index % 4 === 0 ? "bounceIn" :
                    index % 4 === 1 ? "flipIn" :
                    index % 4 === 2 ? "elasticScale" :
                    "morphIn"
                  }
                  delay={0.2 * index}
                >
                  <InteractiveEffect effect="confetti">
                    <Card className="text-center p-6 border-rose-100 hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-4 hover:rotate-2 bg-gradient-to-br from-white via-rose-50/30 to-pink-50/30">
                      <CardContent className="p-0 relative">
                        <div className="absolute inset-0 bg-gradient-to-br opacity-0 hover:opacity-20 transition-opacity duration-500 rounded-lg"
                             style={{background: `linear-gradient(135deg, ${achievement.color.split(' ')[1]}, ${achievement.color.split(' ')[3]})`}}></div>
                        
                        <AdvancedAnimation animation="glowPulse" repeat={true}>
                          <achievement.icon className={`w-12 h-12 bg-gradient-to-r ${achievement.color} bg-clip-text text-transparent mx-auto mb-4`} />
                        </AdvancedAnimation>
                        
                        <h3 className="text-4xl font-bold text-rose-900 mb-2">
                          {achievement.number}
                        </h3>
                        
                        <p className="text-rose-700 font-medium">
                          {achievement.label}
                        </p>
                      </CardContent>
                    </Card>
                  </InteractiveEffect>
                </AdvancedAnimation>
              ))}
            </div>
          </div>
        </section>

        {/* Timeline Section */}
        <AdvancedAnimation animation="fadeIn" delay={0.5}>
          <section className="py-20 bg-white/60 backdrop-blur-md relative z-10">
            <div className="container mx-auto px-4">
              <div className="text-center mb-16">
                <AdvancedAnimation animation="sparkleEntry" delay={0.2}>
                  <h2 className="text-5xl font-bold text-rose-900 mb-4">
                    H√†nh Tr√¨nh Ph√°t Tri·ªÉn
                  </h2>
                </AdvancedAnimation>
                <p className="text-xl text-rose-700 max-w-2xl mx-auto">
                  Nh·ªØng c·ªôt m·ªëc quan tr·ªçng trong h√†nh tr√¨nh x√¢y d·ª±ng th∆∞∆°ng hi·ªáu
                </p>
              </div>

              <div className="max-w-4xl mx-auto">
                {milestones.map((milestone, index) => (
                  <AdvancedAnimation
                    key={index}
                    animation={index % 2 === 0 ? "slideLeft" : "slideRight"}
                    delay={0.2 * index}
                  >
                    <InteractiveEffect effect="ripple">
                      <div className={`flex items-center mb-12 ${index % 2 === 0 ? 'flex-row' : 'flex-row-reverse'}`}>
                        <div className={`w-1/2 ${index % 2 === 0 ? 'pr-8 text-right' : 'pl-8 text-left'}`}>
                          <Card className="bg-gradient-to-br from-white via-rose-50/50 to-pink-50/50 border-rose-100 hover:shadow-xl transition-all duration-500 transform hover:scale-105">
                            <CardContent className="p-6">
                              <div className="text-3xl mb-2">
                                {milestone.icon}
                              </div>
                              <h3 className="text-2xl font-bold text-rose-900 mb-2">
                                {milestone.year}
                              </h3>
                              <p className="text-rose-700">
                                {milestone.event}
                              </p>
                            </CardContent>
                          </Card>
                        </div>
                        
                        <div className="w-4 h-4 bg-gradient-to-r from-rose-500 to-pink-500 rounded-full relative z-10 flex-shrink-0">
                          <AdvancedAnimation animation="glowPulse" repeat={true}>
                            <div className="absolute inset-0 bg-gradient-to-r from-rose-400 to-pink-400 rounded-full animate-ping"></div>
                          </AdvancedAnimation>
                        </div>
                        
                        <div className="w-1/2"></div>
                      </div>
                    </InteractiveEffect>
                  </AdvancedAnimation>
                ))}
              </div>
            </div>
          </section>
        </AdvancedAnimation>

        {/* Dynamic Tabs Section */}
        <section className="py-20 relative z-10">
          <div className="container mx-auto px-4">
            <AdvancedAnimation animation="magicAppear" delay={0.3}>
              <div className="max-w-4xl mx-auto">
                <div className="flex justify-center mb-12">
                  <InteractiveEffect effect="sparkle">
                    <div className="bg-white/80 backdrop-blur-md rounded-full p-2 shadow-2xl border border-rose-100">
                      {["story", "mission", "values"].map((tab, index) => (
                        <AdvancedAnimation key={tab} animation="elasticScale" delay={0.1 * index}>
                          <Button
                            variant={activeTab === tab ? "default" : "ghost"}
                            onClick={() => setActiveTab(tab)}
                            className={`transition-all duration-500 transform hover:scale-110 ${
                              activeTab === tab
                                ? "bg-gradient-to-r from-rose-500 to-pink-500 text-white shadow-lg"
                                : "text-rose-700 hover:text-rose-900 hover:bg-rose-50"
                            }`}
                          >
                            {tab === "story" ? "C√¢u chuy·ªán" : tab === "mission" ? "S·ª© m·ªánh" : "Gi√° tr·ªã"}
                          </Button>
                        </AdvancedAnimation>
                      ))}
                    </div>
                  </InteractiveEffect>
                </div>

                <AdvancedAnimation animation="morphIn" delay={0.5}>
                  <div className="bg-white/90 backdrop-blur-md rounded-3xl p-8 shadow-2xl border border-rose-100">
                    {activeTab === "story" && (
                      <AdvancedAnimation animation="fadeIn">
                        <div className="space-y-6">
                          <h2 className="text-4xl font-bold text-rose-900 mb-6">
                            C√¢u Chuy·ªán C·ªßa Ch√∫ng T√¥i
                          </h2>
                          <p className="text-lg text-rose-700 leading-relaxed">
                            Hoa T∆∞∆°i Vi·ªát ƒë∆∞·ª£c th√†nh l·∫≠p v√†o nƒÉm 2010 b·ªüi ch·ªã Nguy·ªÖn Th·ªã Hoa v·ªõi ni·ªÅm ƒëam m√™ m√£nh li·ªát d√†nh cho hoa t∆∞∆°i. B·∫Øt ƒë·∫ßu t·ª´ m·ªôt c·ª≠a h√†ng nh·ªè t·∫°i ƒê√† L·∫°t, ch√∫ng t√¥i ƒë√£ kh√¥ng ng·ª´ng ph√°t tri·ªÉn v√† m·ªü r·ªông.
                          </p>
                          <p className="text-lg text-rose-700 leading-relaxed">
                            Ng√†y nay, Hoa T∆∞∆°i Vi·ªát ƒë√£ tr·ªü th√†nh m·ªôt trong nh·ªØng th∆∞∆°ng hi·ªáu hoa t∆∞∆°i uy t√≠n nh·∫•t t·∫°i Vi·ªát Nam, v·ªõi h·ªá th·ªëng c·ª≠a h√†ng tr·∫£i d√†i kh·∫Øp c·∫£ n∆∞·ªõc v√† d·ªãch v·ª• giao h√†ng to√†n qu·ªëc.
                          </p>
                        </div>
                      </AdvancedAnimation>
                    )}

                    {activeTab === "mission" && (
                      <AdvancedAnimation animation="fadeIn">
                        <div className="space-y-6">
                          <h2 className="text-4xl font-bold text-rose-900 mb-6">
                            S·ª© M·ªánh C·ªßa Ch√∫ng T√¥i
                          </h2>
                          <p className="text-lg text-rose-700 leading-relaxed">
                            Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng b√¥ng hoa t∆∞∆°i ƒë·∫πp nh·∫•t, ch·∫•t l∆∞·ª£ng cao nh·∫•t ƒë·ªÉ l√†m ƒë·∫πp cu·ªôc s·ªëng v√† truy·ªÅn t·∫£i nh·ªØng th√¥ng ƒëi·ªáp y√™u th∆∞∆°ng, ch√¢n th√†nh nh·∫•t.
                          </p>
                          <p className="text-lg text-rose-700 leading-relaxed">
                            V·ªõi ƒë·ªôi ng≈© florist chuy√™n nghi·ªáp v√† h·ªá th·ªëng logistics hi·ªán ƒë·∫°i, ch√∫ng t√¥i lu√¥n ƒë·∫£m b·∫£o m·ªói b√¥ng hoa ƒë·∫øn tay kh√°ch h√†ng ƒë·ªÅu t∆∞∆°i m·ªõi v√† ho√†n h·∫£o nh·∫•t.
                          </p>
                        </div>
                      </AdvancedAnimation>
                    )}

                    {activeTab === "values" && (
                      <AdvancedAnimation animation="fadeIn">
                        <div className="space-y-6">
                          <h2 className="text-4xl font-bold text-rose-900 mb-6">
                            Gi√° Tr·ªã C·ªët L√µi
                          </h2>
                          <div className="grid md:grid-cols-2 gap-6">
                            {values.map((value, index) => (
                              <AdvancedAnimation 
                                key={index}
                                animation={index % 2 === 0 ? "slideLeft" : "slideRight"}
                                delay={0.2 * index}
                              >
                                <InteractiveEffect effect="ripple">
                                  <div className="bg-gradient-to-br from-rose-50 to-pink-50 rounded-2xl p-6 border border-rose-100 hover:shadow-lg transition-all duration-500 transform hover:scale-105">
                                    <AdvancedAnimation animation="glowPulse" repeat={true}>
                                      <value.icon className={`w-8 h-8 bg-gradient-to-r ${value.color} bg-clip-text text-transparent mb-3`} />
                                    </AdvancedAnimation>
                                    <h3 className="text-xl font-semibold text-rose-800 mb-3">
                                      {value.title}
                                    </h3>
                                    <p className="text-rose-700">
                                      {value.description}
                                    </p>
                                  </div>
                                </InteractiveEffect>
                              </AdvancedAnimation>
                            ))}
                          </div>
                        </div>
                      </AdvancedAnimation>
                    )}
                  </div>
                </AdvancedAnimation>
              </div>
            </AdvancedAnimation>
          </div>
        </section>

        {/* Team Section */}
        <section className="py-20 bg-white/60 backdrop-blur-md relative z-10">
          <div className="container mx-auto px-4">
            <AdvancedAnimation animation="slideUp" delay={0.2}>
              <div className="text-center mb-16">
                <InteractiveEffect effect="sparkle">
                  <Badge className="bg-gradient-to-r from-rose-100 to-pink-100 text-rose-700 hover:from-rose-200 hover:to-pink-200 mb-4 transform hover:scale-110 transition-all duration-300">
                    <Users className="w-4 h-4 mr-2" />
                    ƒê·ªôi ng≈©
                  </Badge>
                </InteractiveEffect>
                <h2 className="text-5xl font-bold text-rose-900 mb-4">
                  G·∫∑p G·ª° ƒê·ªôi Ng≈©
                </h2>
                <p className="text-xl text-rose-700 max-w-2xl mx-auto">
                  Nh·ªØng con ng∆∞·ªùi t√†i nƒÉng v√† ƒëam m√™ ƒë·ª©ng sau th√†nh c√¥ng c·ªßa Hoa T∆∞∆°i Vi·ªát
                </p>
              </div>
            </AdvancedAnimation>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-8">
              {teamMembers.map((member, index) => (
                <AdvancedAnimation
                  key={index}
                  animation={
                    index % 5 === 0 ? "magicAppear" :
                    index % 5 === 1 ? "slideUp" :
                    index % 5 === 2 ? "bounceIn" :
                    index % 5 === 3 ? "flipIn" :
                    "elasticScale"
                  }
                  delay={0.15 * index}
                >
                  <InteractiveEffect effect={
                    index % 5 === 0 ? "fireworks" :
                    index % 5 === 1 ? "confetti" :
                    index % 5 === 2 ? "sparkle" :
                    index % 5 === 3 ? "explosion" :
                    "ripple"
                  }>
                    <Card className="text-center border-rose-100 hover:shadow-2xl transition-all duration-700 transform hover:-translate-y-6 hover:rotate-3 bg-gradient-to-br from-white via-rose-50/30 to-pink-50/30 overflow-hidden group">
                      <CardContent className="p-6 relative">
                        <div className="absolute inset-0 bg-gradient-to-br from-rose-100/50 to-pink-100/50 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        
                        <div className="relative z-10">
                          <AdvancedAnimation animation="glowPulse" repeat={true}>
                            <div className="relative mb-4">
                              <img
                                src={member.image || "/placeholder.svg"}
                                alt={member.name}
                                className="w-24 h-24 rounded-full mx-auto object-cover group-hover:scale-110 transition-transform duration-500 border-4 border-rose-200 group-hover:border-rose-400"
                              />
                              <div className="absolute inset-0 rounded-full bg-gradient-to-tr from-rose-400/20 to-pink-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                            </div>
                          </AdvancedAnimation>
                          
                          <h3 className="text-lg font-bold text-rose-900 mb-2 group-hover:text-rose-600 transition-colors duration-300">
                            {member.name}
                          </h3>
                          
                          <p className="text-rose-600 font-medium mb-2">
                            {member.role}
                          </p>
                          
                          <Badge className="bg-gradient-to-r from-rose-100 to-pink-100 text-rose-700 text-xs mb-3 transform group-hover:scale-110 transition-transform duration-300">
                            {member.specialty}
                          </Badge>
                          
                          <p className="text-rose-700 text-sm mb-3">
                            {member.description}
                          </p>
                          
                          <div className="flex items-center justify-center space-x-1 text-xs text-rose-500">
                            <span>‚è±</span>
                            {member.experience}
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  </InteractiveEffect>
                </AdvancedAnimation>
              ))}
            </div>
          </div>
        </section>

        {/* Contact Info */}
        <section className="py-20 relative z-10">
          <div className="container mx-auto px-4">
            <AdvancedAnimation animation="magicAppear" delay={0.3}>
              <div className="max-w-4xl mx-auto">
                <div className="text-center mb-12">
                  <h2 className="text-5xl font-bold text-rose-900 mb-4">
                    Li√™n H·ªá V·ªõi Ch√∫ng T√¥i
                  </h2>
                  <p className="text-xl text-rose-700">
                    Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† h·ªó tr·ª£ b·∫°n
                  </p>
                </div>

                <div className="grid md:grid-cols-3 gap-8">
                  {[
                    { icon: Phone, title: "ƒêi·ªán tho·∫°i", info: "0123 456 789", color: "from-green-500 to-emerald-500" },
                    { icon: MapPin, title: "ƒê·ªãa ch·ªâ", info: "123 ƒê∆∞·ªùng Hoa, Qu·∫≠n 1, TP.HCM", color: "from-blue-500 to-cyan-500" },
                    { icon: Mail, title: "Email", info: "contact@hoatuoiviet.com", color: "from-purple-500 to-pink-500" }
                  ].map((contact, index) => (
                    <AdvancedAnimation
                      key={index}
                      animation={
                        index % 3 === 0 ? "bounceIn" :
                        index % 3 === 1 ? "flipIn" :
                        "elasticScale"
                      }
                      delay={0.2 * index}
                    >
                      <InteractiveEffect effect="confetti">
                        <Card className="text-center p-6 border-rose-100 hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-4 hover:rotate-2 bg-gradient-to-br from-white via-rose-50/30 to-pink-50/30">
                          <CardContent className="p-0 relative">
                            <div className="absolute inset-0 bg-gradient-to-br opacity-0 hover:opacity-20 transition-opacity duration-500 rounded-lg"
                                 style={{background: `linear-gradient(135deg, ${contact.color.split(' ')[1]}, ${contact.color.split(' ')[3]})`}}></div>
                            
                            <AdvancedAnimation animation="glowPulse" repeat={true}>
                              <contact.icon className={`w-12 h-12 bg-gradient-to-r ${contact.color} bg-clip-text text-transparent mx-auto mb-4`} />
                            </AdvancedAnimation>
                            
                            <h3 className="text-lg font-semibold text-rose-900 mb-2">
                              {contact.title}
                            </h3>
                            
                            <p className="text-rose-700">
                              {contact.info}
                            </p>
                          </CardContent>
                        </Card>
                      </InteractiveEffect>
                    </AdvancedAnimation>
                  ))}
                </div>
              </div>
            </AdvancedAnimation>
          </div>
        </section>

        {/* Footer */}
        {/* @ts-ignore */}
        <SiteFooter />
      </div>
    </PageTransition>
  );
}